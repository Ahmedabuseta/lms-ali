name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  production-build:
    name: Production Build
    runs-on: self-hosted
    environment: ${{ github.event.inputs.environment || 'production' }}

    strategy:
      matrix:
        node-version: [20.x]

    env:
      NODE_ENV: production
      ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
      BETTER_AUTH_URL: ${{ secrets.BETTER_AUTH_URL }}
      BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
      CHUTES_API_TOKEN: ${{ secrets.CHUTES_API_TOKEN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DO_SPACES_BUCKET: ${{ secrets.DO_SPACES_BUCKET }}
      DO_SPACES_ENDPOINT: ${{ secrets.DO_SPACES_ENDPOINT }}
      DO_SPACES_REGION: ${{ secrets.DO_SPACES_REGION }}
      DO_SPACES_KEY: ${{ secrets.DO_SPACES_KEY }}
      DO_SPACES_SECRET: ${{ secrets.DO_SPACES_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      MUX_TOKEN_ID: ${{ secrets.MUX_TOKEN_ID }}
      MUX_TOKEN_SECRET: ${{ secrets.MUX_TOKEN_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --only=production

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Database backup (production only)
        if: github.event.inputs.environment == 'production'
        run: |
          echo "Creating database backup..."
          # Add your database backup commands here

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Build application
        run: npm run build

      - name: Run production tests
        run: |
          echo "Running production-specific tests..."
          # Add production test commands here

      - name: Deploy to production
        run: |
          echo "Deploying to ${{ github.event.inputs.environment || 'production' }}..."
          # Restart your application service here
          # Example: pm2 restart your-app-name

      - name: Smoke tests
        run: |
          echo "Running smoke tests..."
          sleep 10
          curl -f http://localhost:3000/api/health || exit 1

      - name: Notify deployment
